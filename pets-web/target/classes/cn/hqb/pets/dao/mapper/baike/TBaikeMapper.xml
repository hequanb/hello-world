<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.hqb.pets.dao.mapper.baike.TBaikeMapper">
	<resultMap id="tBaikeResultMap" type="tBaike">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="temp" property="temp" jdbcType="VARCHAR"/>
		<result column="original" property="original" jdbcType="VARCHAR"/>
		<result column="illness" property="illness" jdbcType="VARCHAR"/>
		<result column="lifetime" property="lifetime" jdbcType="VARCHAR"/>
		<result column="price" property="price" jdbcType="VARCHAR"/>
		<result column="type_article" property="typeArticle" jdbcType="CLOB"/>
		<result column="temp_article" property="tempArticle" jdbcType="CLOB"/>
		<result column="image" property="image" jdbcType="VARCHAR"/>
		<result column="cid" property="cid" jdbcType="INTEGER"/>
		<result column="status" property="status" jdbcType="INTEGER"/>
		<result column="created" property="created" jdbcType="TIMESTAMP"/>
		<result column="updated" property="updated" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<sql id="BASE_COLUMN" >
		id, name, temp, original, illness, lifetime,
		price, type_article, temp_article, image,
		cid, status, created, updated
  	</sql>
  	
	<insert id="insert" parameterType="tBaike" >
		insert into t_baike
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="name != null" >
				name,
			</if>
			<if test="temp != null" >
				temp,
			</if>
			<if test="original != null">
				original,
			</if>
			<if test="illness != null">
				illness,
			</if>
			<if test="lifetime != null">
				lifetime,
			</if>
			<if test="price != null" >
				price,
			</if>
			<if test="typeArticle != null" >
				type_article,
			</if>
			<if test="tempArticle != null" >
				temp_article,
			</if>
			<if test="image != null" >
				image,
			</if>
			<if test="cid != null" >
				cid,
			</if>
			<if test="status != null" >
				status,
			</if>
				created,
				updated
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
		<if test="name != null" >
		   	#{name, jdbcType = VARCHAR},
		   </if>
		   <if test="temp != null" >
		   	#{temp, jdbcType = VARCHAR},
		   </if>
		   <if test="original != null">
		   	#{original, jdbcType = VARCHAR},
		   </if>
		   <if test="illness != null">
		   	#{illness, jdbcType = VARCHAR},
		   </if>
		   <if test="lifetime != null">
		   	#{lifetime, jdbcType = VARCHAR},
		   </if>
		   <if test="price != null" >
		   	#{price, jdbcType = VARCHAR},
		   </if>
		   <if test="typeArticle != null" >
		   	#{typeArticle, jdbcType = CLOB},
		   </if>
		   <if test="tempArticle != null" >
		   	#{tempArticle, jdbcType = CLOB},
		   </if>
		   <if test="image != null" >
		   	#{image, jdbcType = VARCHAR},
		   </if>
		   <if test="cid != null" >
		   	#{cid, jdbcType = INTEGER},
		   </if>
		   <if test="status != null" >
		   	#{status, jdbcType = INTEGER},
			</if>
			SYSDATE(),
			SYSDATE()
		</trim>
	 </insert>
	 
	 <select id="getCount" resultType="Integer" parameterType="tBaikeVo">
  		select count(*) from t_baike
  		<where>
  			<if test="name != null">
  				and name like CONCAT(CONCAT('%', #{name, jdbcType = VARCHAR}), '%')
  			</if>
  			
  			<if test="cid != null">
  				and cid = #{cid, jdbcType = INTEGER}
  			</if>
  			
  			and status = 1
  		</where>
  	</select>
  	
  	<select id="getBaike" parameterType="tBaikeVo" resultMap="tBaikeResultMap">
  		select
  			<include refid="BASE_COLUMN"/>
  		from
  			t_baike
  		<where>
  			<if test="name != null">
  				and name like CONCAT(CONCAT('%', #{name, jdbcType = VARCHAR}), '%')
  			</if>
  			
  			<if test="cid != null">
  				and cid = #{cid, jdbcType = INTEGER}
  			</if>
  			
  			and status = 1
  		</where>
  		<if test="firstResult != null and limit != null">
  			limit #{firstResult, jdbcType = INTEGER},#{limit, jdbcType = INTEGER}
  		</if>
  	</select>
	 
	<update id="delete" parameterType="java.lang.Long">
		update t_baike
		<set>
			status = 0,
			updated = SYSDATE()
		</set>
		where 
			id = #{id,jdbcType = BIGINT}
	</update>
	
	<select id="getBaikeById" resultMap="tBaikeResultMap">
		select
			<include refid="BASE_COLUMN"></include>
		from t_baike
		<where>
			<if test="id != null">
				id = #{id, jdbcType = BIGINT}			
			</if>
		</where>
	</select>
	
	<update id="update" parameterType="tBaike">
		update t_baike
		<set>
			<if test="name != null">
				name = #{name, jdbcType = VARCHAR},
			</if>
			<if test="temp != null">
				temp = #{temp, jdbcType = VARCHAR},
			</if>
			<if test="original != null">
				original = #{original, jdbcType = VARCHAR},
			</if>
			<if test="illness != null">
				illness = #{illness, jdbcType = VARCHAR},
			</if>
			<if test="lifetime != null">
				lifetime = #{lifetime, jdbcType = VARCHAR},
			</if>
			<if test="price != null">
				price = #{price, jdbcType = VARCHAR},
			</if>
			<if test="typeArticle != null">
				type_article = #{typeArticle, jdbcType = CLOB},
			</if>
			<if test="tempArticle != null">
				temp_article = #{tempArticle, jdbcType = CLOB},
			</if>
			<if test="image != null">
				image = #{image, jdbcType = VARCHAR},
			</if>
			<if test="cid != null">
				cid = #{cid, jdbcType = INTEGER},
			</if>
			<if test="status != null">
				status = #{status, jdbcType = INTEGER},
			</if>
				updated = SYSDATE()
		</set>
		where 
			id = #{id, jdbcType = BIGINT}
	</update>
	
	<select id="getBaikeNew" resultMap="tBaikeResultMap">
  		select
  			<include refid="BASE_COLUMN"/>
  		from
  			t_baike
  		<where>
  			status = 1
  		</where>
  		order by created desc
  	</select>
  	
  	<select id="getBaikeByCid" resultMap="tBaikeResultMap">
		select
			<include refid="BASE_COLUMN"></include>
		from t_baike
		<where>
			<if test="cid != null">
				cid = #{cid, jdbcType = BIGINT}			
			</if>
			and status = 1
		</where>
	</select>
	 
</mapper>